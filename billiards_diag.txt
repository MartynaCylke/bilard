===== TOOLS =====
/Users/tysia/.nvm/versions/node/v22.12.0/bin/node
v22.12.0
/Users/tysia/.nvm/versions/node/v22.12.0/bin/pnpm
10.15.1
/Users/tysia/.pyenv/shims/python
Python 3.10.0

===== .env.local (FRONT) =====
VITE_PUBLIC_RGS_URL=http://127.0.0.1:8787

===== config.ts (FRONT) =====
CFG=/Users/tysia/billiards-project/web-sdk/apps/cluster/src/game/config.ts
export default {
	providerName: 'sample_provider',
	gameName: 'sample_lines',
	gameID: '0_0_cluster',
	rtp: 0.97,
  
	// === ZMIANA NA 5×5 ===
	numReels: 5,
	numRows: [5, 5, 5, 5, 5],
  
	betModes: {
	  base: {
		cost: 1.0,
		feature: true,
		buyBonus: false,
		rtp: 0.97,
		max_win: 5000.0,
	  },
	  bonus: {
		cost: 500,
		feature: true,
		buyBonus: false,
		rtp: 0.97,
		max_win: 5000.0,
	  },
	},
	symbols: {
	  W: {
		paytable: null,
		special_properties: ['wild', 'multiplier'],
	  },
	  L4: {
		paytable: [
		  { '5': 0.1 }, { '6': 0.5 }, { '7': 0.5 }, { '8': 0.5 },
		  { '9': 1.5 }, { '10': 1.5 }, { '11': 1.5 }, { '12': 1.5 },
		  { '13': 4.0 }, { '14': 4.0 }, { '15': 4.0 }, { '16': 4.0 },
		  { '17': 4.0 }, { '18': 4.0 }, { '19': 4.0 }, { '20': 4.0 },
		  { '21': 4.0 }, { '22': 4.0 }, { '23': 4.0 }, { '24': 4.0 },
		  { '25': 4.0 }, { '26': 4.0 }, { '27': 4.0 }, { '28': 4.0 },
		  { '29': 4.0 }, { '30': 4.0 }, { '31': 4.0 }, { '32': 4.0 },
		  { '33': 4.0 }, { '34': 4.0 }, { '35': 4.0 }, { '36': 4.0 },
		],
	  },
	  L1: {
		paytable: [
		  { '5': 0.6 }, { '6': 1.5 }, { '7': 1.5 }, { '8': 1.5 },
		  { '9': 4.0 }, { '10': 4.0 }, { '11': 4.0 }, { '12': 4.0 },
		  { '13': 10.0 }, { '14': 10.0 }, { '15': 10.0 }, { '16': 10.0 },
		  { '17': 10.0 }, { '18': 10.0 }, { '19': 10.0 }, { '20': 10.0 },
		  { '21': 10.0 }, { '22': 10.0 }, { '23': 10.0 }, { '24': 10.0 },
		  { '25': 10.0 }, { '26': 10.0 }, { '27': 10.0 }, { '28': 10.0 },
		  { '29': 10.0 }, { '30': 10.0 }, { '31': 10.0 }, { '32': 10.0 },
		  { '33': 10.0 }, { '34': 10.0 }, { '35': 10.0 }, { '36': 10.0 },
		],
	  },
	  H3: {
		paytable: [
		  { '5': 1.3 }, { '6': 3.2 }, { '7': 3.2 }, { '8': 3.2 },
		  { '9': 7.0 }, { '10': 7.0 }, { '11': 7.0 }, { '12': 7.0 },
		  { '13': 30.0 }, { '14': 30.0 }, { '15': 30.0 }, { '16': 30.0 },
		  { '17': 30.0 }, { '18': 30.0 }, { '19': 30.0 }, { '20': 30.0 },
		  { '21': 30.0 }, { '22': 30.0 }, { '23': 30.0 }, { '24': 30.0 },
		  { '25': 30.0 }, { '26': 30.0 }, { '27': 30.0 }, { '28': 30.0 },
		  { '29': 30.0 }, { '30': 30.0 }, { '31': 30.0 }, { '32': 30.0 },
		  { '33': 30.0 }, { '34': 30.0 }, { '35': 30.0 }, { '36': 30.0 },
		],
	  },
	  S: {
		paytable: null,
		special_properties: ['scatter'],
	  },
	  H4: {
		paytable: [
		  { '5': 1.0 }, { '6': 2.5 }, { '7': 2.5 }, { '8': 2.5 },
		  { '9': 6.0 }, { '10': 6.0 }, { '11': 6.0 }, { '12': 6.0 },
		  { '13': 20.0 }, { '14': 20.0 }, { '15': 20.0 }, { '16': 20.0 },
		  { '17': 20.0 }, { '18': 20.0 }, { '19': 20.0 }, { '20': 20.0 },
		  { '21': 20.0 }, { '22': 20.0 }, { '23': 20.0 }, { '24': 20.0 },
		  { '25': 20.0 }, { '26': 20.0 }, { '27': 20.0 }, { '28': 20.0 },
		  { '29': 20.0 }, { '30': 20.0 }, { '31': 20.0 }, { '32': 20.0 },
		  { '33': 20.0 }, { '34': 20.0 }, { '35': 20.0 }, { '36': 20.0 },
		],
	  },
	  L2: {
		paytable: [
		  { '5': 0.4 }, { '6': 1.2 }, { '7': 1.2 }, { '8': 1.2 },
		  { '9': 3.5 }, { '10': 3.5 }, { '11': 3.5 }, { '12': 3.5 },
		  { '13': 8.0 }, { '14': 8.0 }, { '15': 8.0 }, { '16': 8.0 },
		  { '17': 8.0 }, { '18': 8.0 }, { '19': 8.0 }, { '20': 8.0 },
		  { '21': 8.0 }, { '22': 8.0 }, { '23': 8.0 }, { '24': 8.0 },
		  { '25': 8.0 }, { '26': 8.0 }, { '27': 8.0 }, { '28': 8.0 },
		  { '29': 8.0 }, { '30': 8.0 }, { '31': 8.0 }, { '32': 8.0 },
		  { '33': 8.0 }, { '34': 8.0 }, { '35': 8.0 }, { '36': 8.0 },
		],
	  },
	  H1: {
		paytable: [
		  { '5': 3.0 }, { '6': 7.5 }, { '7': 7.5 }, { '8': 7.5 },
		  { '9': 15.0 }, { '10': 15.0 }, { '11': 15.0 }, { '12': 15.0 },
		  { '13': 60.0 }, { '14': 60.0 }, { '15': 60.0 }, { '16': 60.0 },
		  { '17': 60.0 }, { '18': 60.0 }, { '19': 60.0 }, { '20': 60.0 },
		  { '21': 60.0 }, { '22': 60.0 }, { '23': 60.0 }, { '24': 60.0 },
		  { '25': 60.0 }, { '26': 60.0 }, { '27': 60.0 }, { '28': 60.0 },
		  { '29': 60.0 }, { '30': 60.0 }, { '31': 60.0 }, { '32': 60.0 },
		  { '33': 60.0 }, { '34': 60.0 }, { '35': 60.0 }, { '36': 60.0 },
		],
	  },
	  H2: {
		paytable: [
		  { '5': 2.0 }, { '6': 5.0 }, { '7': 5.0 }, { '8': 5.0 },
		  { '9': 10.0 }, { '10': 10.0 }, { '11': 10.0 }, { '12': 10.0 },
		  { '13': 40.0 }, { '14': 40.0 }, { '15': 40.0 }, { '16': 40.0 },
		  { '17': 40.0 }, { '18': 40.0 }, { '19': 40.0 }, { '20': 40.0 },
		  { '21': 40.0 }, { '22': 40.0 }, { '23': 40.0 }, { '24': 40.0 },
		  { '25': 40.0 }, { '26': 40.0 }, { '27': 40.0 }, { '28': 40.0 },
		  { '29': 40.0 }, { '30': 40.0 }, { '31': 40.0 }, { '32': 40.0 },
		  { '33': 40.0 }, { '34': 40.0 }, { '35': 40.0 }, { '36': 40.0 },
		],
	  },
	  L3: {
		paytable: [
		  { '5': 0.2 }, { '6': 0.8 }, { '7': 0.8 }, { '8': 0.8 },
		  { '9': 2.5 }, { '10': 2.5 }, { '11': 2.5 }, { '12': 2.5 },
		  { '13': 5.0 }, { '14': 5.0 }, { '15': 5.0 }, { '16': 5.0 },
		  { '17': 5.0 }, { '18': 5.0 }, { '19': 5.0 }, { '20': 5.0 },
		  { '21': 5.0 }, { '22': 5.0 }, { '23': 5.0 }, { '24': 5.0 },
		  { '25': 5.0 }, { '26': 5.0 }, { '27': 5.0 }, { '28': 5.0 },
		  { '29': 5.0 }, { '30': 5.0 }, { '31': 5.0 }, { '32': 5.0 },
		  { '33': 5.0 }, { '34': 5.0 }, { '35': 5.0 }, { '36': 5.0 },
		],
	  },
	},
	paddingReels: {
	  basegame: '',
	  freegame: '',
	},
  };
  
===== store: game.ts =====
(brak src/lib/stores/game.ts)

===== UI: GameControls.svelte =====
(brak GameControls.svelte)

===== UI: Board.svelte =====
(brak Board.svelte)

===== Entry: +page.svelte / App.svelte =====

===== MOCK: mock_rgs.py =====
# ~/billiards-project/rgs-mock/mock_rgs.py
import os, random
from fastapi import FastAPI, Request, Response
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

CURRENCY = "USD"
DEFAULT_LANG = "en"

ALLOWED_ORIGINS = [
    "http://localhost:3001",
    "http://127.0.0.1:3001",
    "http://10.0.0.22:3001",
]

app = FastAPI(title="RGS Mock (billiards)")

# Uwaga: brak allow_private_network — ta wersja Starlette go nie zna
app.add_middleware(
    CORSMiddleware,
    allow_origins=ALLOWED_ORIGINS,
    allow_methods=["*"],
    allow_headers=["*"],
    allow_credentials=False,
)

# Dodatkowy handler OPTIONS (zwrot PNA dla Chrome)
@app.options("/{path:path}")
def options_pna(path: str, request: Request):
    origin = request.headers.get("origin", "")
    headers = {
        "Access-Control-Allow-Origin": origin if origin in ALLOWED_ORIGINS else "",
        "Access-Control-Allow-Methods": "GET,POST,OPTIONS",
        "Access-Control-Allow-Headers": request.headers.get("access-control-request-headers", "*"),
        "Access-Control-Max-Age": "600",
        "Access-Control-Allow-Private-Network": "true",
    }
    return Response(status_code=200, content="OK", headers=headers)

class AuthReq(BaseModel):
    sessionID: str

class PlayReq(BaseModel):
    sessionID: str
    amount: int = 100
    mode: str = "BASE"

class EndReq(BaseModel):
    sessionID: str

# Symbole zgodne z Twoim config.ts
SYMBOLS = ["W","L4","L1","H3","S","H4","L2","H1","H2","L3"]

def random_board(rows=5, cols=5):
    return [[random.choice(SYMBOLS) for _ in range(cols)] for __ in range(rows)]

# Pierwszy spin wymuś stałą planszę 5×5, jeśli ustawisz env MOCK_TEST_BOARD=1
FIXED_BOARD = os.environ.get("MOCK_TEST_BOARD") == "1"
_fixed_used = False
TEST_BOARD = [
    ["H1","H2","H3","H4","L1"],
    ["L1","L2","L3","L4","W"],
    ["H1","H2","S","H4","L1"],
    ["L1","W","L3","L4","H2"],
    ["H1","H2","H3","H4","L1"],
]

@app.get("/health")
def health():
    return {"ok": True}

@app.post("/wallet/authenticate")
def authenticate(_: AuthReq):
    return {"balance": {"amount": 10_000_000_000, "currency": CURRENCY}, "lang": DEFAULT_LANG}

@app.post("/wallet/play")
def play(req: PlayReq):
    global _fixed_used
    board = TEST_BOARD if (FIXED_BOARD and not _fixed_used) else random_board(5, 5)
    if FIXED_BOARD and not _fixed_used:
        _fixed_used = True
    events = [
        {"type": "setBoard", "board": board},
        {"type": "setTotalWin", "amount": 0},
    ]
    return {
        "balance": {"amount": 10_000_000_000 - int(req.amount), "currency": CURRENCY},
        "round": {"events": events},
    }

@app.post("/wallet/end-round")
def end_round(_: EndReq):
    return {"balance": {"amount": 10_000_000_000, "currency": CURRENCY}}

===== API tests =====
-> GET /health
HTTP/1.1 200 OK
date: Thu, 18 Sep 2025 12:07:24 GMT
server: uvicorn
content-length: 11
content-type: application/json

{"ok":true}
-> POST /wallet/authenticate
HTTP/1.1 200 OK
date: Thu, 18 Sep 2025 12:07:24 GMT
server: uvicorn
content-length: 63
content-type: application/json

{"balance":{"amount":10000000000,"currency":"USD"},"lang":"en"}
-> POST /play
HTTP/1.1 405 Method Not Allowed
date: Thu, 18 Sep 2025 12:07:24 GMT
server: uvicorn
allow: OPTIONS
content-length: 31
content-type: application/json

{"detail":"Method Not Allowed"}
===== PORTY =====
--- 3001 (frontend) ---
COMMAND   PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
node    84494 tysia   30u  IPv6 0xfadbf30bb1ed037f      0t0  TCP *:3001 (LISTEN)
--- 8787 (mock) ---
COMMAND     PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
python3.1 83242 tysia    3u  IPv4 0x714aec193f4cebd9      0t0  TCP *:8787 (LISTEN)
python3.1 83244 tysia    3u  IPv4 0x714aec193f4cebd9      0t0  TCP *:8787 (LISTEN)

